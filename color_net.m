function [Y,Xf,Af] = color_net(X,~,~)
%COLOR_NET neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 10-Dec-2014 17:39:43.
% 
% [Y] = color_net(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 6xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [1.45045685305343e-20;2.5706744502673e-11;2.5706744502673e-11;1.45045685305343e-20];
  x1_step1_gain = [0.10000340295297;0.100013612506829;0.100013612506829;0.10000340295297];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [4.1139682116797633427;-2.1306550521976621582;13.251806087287993918;2.1386124671927912999;-1.3537203940112250145;-1.0920262015692805413;-6.3340978644651899643;-6.5596855338057205032;8.3036281423461222317;-11.574352853698327337];
  IW1_1 = [-30.015755410192731745 -24.484017531173005722 -0.4381679491125267667 -1.7538119795196238648;2.7228743870443898878 2.2530573150766644019 -0.54830045701283669501 0.25238922449328909936;-8.0635908478197038107 6.4952972036035641068 -2.510463530697592649 19.354727578305240598;-2.3827702283696017282 20.709891822313345244 -12.888833526486259018 -2.302126085750182849;0.5424723519878311695 -0.14074181426683879392 0.28725054232510965901 0.78052827659330947796;-3.6275483883750503367 -12.483835809818909723 -12.097114361720729292 10.088765005659571017;-7.4776095846513870313 -24.113665973165584688 16.166473834323866754 9.2687777748627873109;-5.2962346829278441618 -1.2856982678481019278 0.22344020173454823275 0.25819781868244479073;23.412839469897079425 -18.17288464046426455 1.9191852898191474885 0.52294647306426689237;7.6357803784219733245 -7.1933619153719385864 24.419554608096088799 7.4423342509174643666];
  
  % Layer 2
  b2 = [-1.4702505526279823211;-0.93681475443475703546;0.72632140124342092768;-1.3856921333197529389;0.13210744599577955993;-0.23238046645881588192];
  LW2_1 = [1.1109660419529090447 0.6345502718575507517 0.020549139065056822029 -1.022779108862892139 0.094581772935116603662 -0.028218480799074768806 -0.98217526295243928747 -0.10037436866542782943 0.035221916233401762142 -0.0083828358442849700005;-1.1439602016547083529 -1.3617912250713846145 -0.33260019824672854005 1.0354158884998145851 1.4622904984085842717 -0.58619401215035527031 0.89669355848220677618 -1.1393958161099106974 1.2494535562472564028 -0.9331050871291832749;0.049761303156960590144 0.83642413286281702689 0.32058050423380518579 -0.012590771744021551568 -1.2500254388078215761 0.53601471077268836307 -0.92377068538031748002 1.233343823602576661 -1.2123830436387863507 0.88535185613971456586;0.023117451502962474419 0.093650531135928416493 -0.45360478830765837976 -0.004592897387024230671 0.55436511462215043444 -0.7917060420594395076 0.63612418190088870773 -0.38126292278171208805 0.32270857723628959546 -1.2551048747935356076;-0.0020450719836256725341 -0.076765392877914645497 0.0091440902866654766301 -0.00098107854881241849873 0.18717393419346484151 0.039660121340416715219 0.0085999731397908753955 -0.0563847829721552396 -0.033044650103547644482 1.0682181489583768563;0.0093411980906796046598 0.12862171877691541688 0.49287993276207642257 0.0068575322445092751905 -0.048981775813574379708 0.64461669282507061407 0.45865410431355524423 0.10491509884432148603 -0.15608583725898869665 0.13819943580030016883];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = [2;2;2;2;2;2];
  y1_step1_xoffset = [0;0;0;0;0;0];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
